package searchTab;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.awt.*;

import java.awt.event.*;

import java.sql.*;

import java.text.DateFormat;
import java.text.SimpleDateFormat;

import java.util.Arrays;
import java.util.Date;

import javax.swing.*;

import myClass.Database;
import myClass.SubFrame;
import myClass.TextFieldBehavior;

import main.MainForm;

/**
 *
 * @author Harry
 */
public class FrmLogin extends javax.swing.JFrame implements FocusListener, KeyListener {

    /**
     * Creates new form FrmLogin
     */
    Connection con;
    Statement st;
    ResultSet rs;

    String sqlLogin;
    String sqlSignup;

    ButtonGroup bg;

    String accountType;
    String username;
    String date;
    
    SubFrame sub;

    private boolean loggedin;

    public boolean isLoggedin() {
        return loggedin;
    }

    public void setLoggedin(boolean loggedin) {
        this.loggedin = loggedin;
    }
    
    public String getAccountType() {
        return accountType;
    }

    public void setAccountType(String account_type) {
        this.accountType = account_type;
    }

    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }
    
    public FrmLogin() {
        try {
            Class.forName(Database.driver);
            con = DriverManager.getConnection(Database.url);
        } catch (ClassNotFoundException | SQLException e) {
        }

        SimpleButton();

        initComponents();

        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
	Date date = new Date();
        this.date = dateFormat.format(date);
        
        sub = new SubFrame(panel_main, this);

        configControl();

        bg = new ButtonGroup();
        bg.add(rdbInsurance);
        bg.add(rdbHealthCare);
        bg.add(rdbNormal);

        //char p = txtPassword.getEchoChar();
        ChangePanelColor();

        this.getRootPane().setBorder(BorderFactory.createSoftBevelBorder(5, Color.lightGray, new Color(100, 50, 120)));

        this.getContentPane().requestFocus();

        ConfigPasswordPanel();

        ConfigPasswordField();

        AddEventForAllTextField();
    }

    private void closeJFrame() {
        WindowEvent winClosingEvent = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_main = new javax.swing.JPanel();
        pnlSignup = new javax.swing.JPanel();
        txtFirstName = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        btnSignup = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtConfirmPassword = new javax.swing.JPasswordField();
        pnlPassword = new javax.swing.JPanel();
        txtPassword = new javax.swing.JPasswordField();
        chkShowPassword = new javax.swing.JCheckBox();
        rdbInsurance = new javax.swing.JRadioButton();
        rdbHealthCare = new javax.swing.JRadioButton();
        rdbNormal = new javax.swing.JRadioButton();
        pnlLogin = new javax.swing.JPanel();
        chkRemember = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        txtLoginUsername = new javax.swing.JTextField();
        btnLogin = new javax.swing.JButton();
        lbForgetPassword = new javax.swing.JLabel();
        txtLoginPassword = new javax.swing.JPasswordField();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        btnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        pnlSignup.setBackground(new java.awt.Color(255, 255, 255));

        txtFirstName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtFirstName.setForeground(new java.awt.Color(153, 153, 153));
        txtFirstName.setText("First Name");

        txtLastName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtLastName.setForeground(new java.awt.Color(153, 153, 153));
        txtLastName.setText("Last Name");

        txtUsername.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtUsername.setForeground(new java.awt.Color(153, 153, 153));
        txtUsername.setText("Username");

        btnSignup.setBackground(new java.awt.Color(204, 0, 0));
        btnSignup.setFont(new java.awt.Font("Baiduk OT", 0, 18)); // NOI18N
        btnSignup.setForeground(new java.awt.Color(255, 255, 255));
        btnSignup.setText("Get Started");
        btnSignup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignupActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tw Cen MT", 0, 50)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Sign up");

        txtConfirmPassword.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtConfirmPassword.setForeground(new java.awt.Color(153, 153, 153));
        txtConfirmPassword.setText("Confirm Password");

        txtPassword.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtPassword.setForeground(new java.awt.Color(153, 153, 153));
        txtPassword.setText("Password");

        chkShowPassword.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        chkShowPassword.setText("Show");
        chkShowPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkShowPasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlPasswordLayout = new javax.swing.GroupLayout(pnlPassword);
        pnlPassword.setLayout(pnlPasswordLayout);
        pnlPasswordLayout.setHorizontalGroup(
            pnlPasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPasswordLayout.createSequentialGroup()
                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 607, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(chkShowPassword))
        );
        pnlPasswordLayout.setVerticalGroup(
            pnlPasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPasswordLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(pnlPasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkShowPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        rdbInsurance.setBackground(new java.awt.Color(255, 255, 255));
        rdbInsurance.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        rdbInsurance.setText("Insurance Company");

        rdbHealthCare.setBackground(new java.awt.Color(255, 255, 255));
        rdbHealthCare.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        rdbHealthCare.setText("Healthcare Provider");

        rdbNormal.setBackground(new java.awt.Color(255, 255, 255));
        rdbNormal.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        rdbNormal.setText("Normal");

        javax.swing.GroupLayout pnlSignupLayout = new javax.swing.GroupLayout(pnlSignup);
        pnlSignup.setLayout(pnlSignupLayout);
        pnlSignupLayout.setHorizontalGroup(
            pnlSignupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSignupLayout.createSequentialGroup()
                .addGroup(pnlSignupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSignupLayout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(btnSignup, javax.swing.GroupLayout.PREFERRED_SIZE, 605, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlSignupLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(pnlSignupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlSignupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtUsername)
                                .addGroup(pnlSignupLayout.createSequentialGroup()
                                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtLastName))
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtConfirmPassword)
                                .addComponent(pnlPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(pnlSignupLayout.createSequentialGroup()
                                .addComponent(rdbInsurance)
                                .addGap(36, 36, 36)
                                .addComponent(rdbHealthCare)
                                .addGap(36, 36, 36)
                                .addComponent(rdbNormal, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        pnlSignupLayout.setVerticalGroup(
            pnlSignupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSignupLayout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addGroup(pnlSignupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(txtConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlSignupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSignupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rdbHealthCare, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rdbNormal))
                    .addComponent(rdbInsurance, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(btnSignup, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(103, 103, 103))
        );

        pnlLogin.setBackground(new java.awt.Color(8, 83, 140));

        chkRemember.setBackground(new java.awt.Color(8, 83, 140));
        chkRemember.setForeground(new java.awt.Color(255, 255, 255));
        chkRemember.setText("    Remember me");

        jLabel1.setFont(new java.awt.Font("Tw Cen MT", 0, 40)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Login");

        txtLoginUsername.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtLoginUsername.setForeground(new java.awt.Color(153, 153, 153));
        txtLoginUsername.setText("Username");

        btnLogin.setBackground(new java.awt.Color(255, 0, 0));
        btnLogin.setFont(new java.awt.Font("Baiduk OT", 0, 18)); // NOI18N
        btnLogin.setForeground(new java.awt.Color(255, 255, 255));
        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        lbForgetPassword.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        lbForgetPassword.setForeground(new java.awt.Color(255, 255, 255));
        lbForgetPassword.setText("Forget Password?");
        lbForgetPassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbForgetPasswordMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbForgetPasswordMouseExited(evt);
            }
        });

        txtLoginPassword.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtLoginPassword.setForeground(new java.awt.Color(153, 153, 153));
        txtLoginPassword.setText("Password");
        txtLoginPassword.setEchoChar((char)0);

        javax.swing.GroupLayout pnlLoginLayout = new javax.swing.GroupLayout(pnlLogin);
        pnlLogin.setLayout(pnlLoginLayout);
        pnlLoginLayout.setHorizontalGroup(
            pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlLoginLayout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addComponent(chkRemember)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoginLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(pnlLoginLayout.createSequentialGroup()
                        .addComponent(lbForgetPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63)
                        .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtLoginPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
                    .addComponent(txtLoginUsername))
                .addGap(32, 32, 32))
        );
        pnlLoginLayout.setVerticalGroup(
            pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoginLayout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(txtLoginUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtLoginPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(chkRemember)
                .addGap(18, 18, 18)
                .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbForgetPassword))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(8, 83, 140));

        btnExit.setBackground(new java.awt.Color(255, 51, 51));
        btnExit.setForeground(new java.awt.Color(255, 255, 255));
        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Delete_30px.png"))); // NOI18N
        btnExit.setPreferredSize(new java.awt.Dimension(33, 33));
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(351, Short.MAX_VALUE)
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panel_mainLayout = new javax.swing.GroupLayout(panel_main);
        panel_main.setLayout(panel_mainLayout);
        panel_mainLayout.setHorizontalGroup(
            panel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_mainLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(panel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlSignup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(panel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );
        panel_mainLayout.setVerticalGroup(
            panel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_mainLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(panel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(panel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panel_mainLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(pnlSignup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(panel_main, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_main, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        if (MainForm.isLogout()) {
            this.setLoggedin(false);
        }
        
        closeJFrame();
    }//GEN-LAST:event_btnExitActionPerformed

    private void lbForgetPasswordMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbForgetPasswordMouseEntered
        // TODO add your handling code here:
        lbForgetPassword.setText("<html><u>Forget Password?</u></html>");
        lbForgetPassword.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_lbForgetPasswordMouseEntered

    private void lbForgetPasswordMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbForgetPasswordMouseExited
        // TODO add your handling code here:
        lbForgetPassword.setText("Forget Password?");
    }//GEN-LAST:event_lbForgetPasswordMouseExited

    private void chkShowPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkShowPasswordActionPerformed
        // TODO add your handling code here:
        if (chkShowPassword.isSelected()) {
            txtPassword.setEchoChar((char) 0);
        } else if (Arrays.equals("Password".toCharArray(), txtPassword.getPassword())) {
            if (txtPassword.getForeground().equals(new Color(153, 153, 153))) {
                /* do nothing*/
            }

        } else {

            txtPassword.setEchoChar('\u25cf');
        }
    }//GEN-LAST:event_chkShowPasswordActionPerformed
 
    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:       
        this.setLoggedin(false);

        InitQuery();

        try {
            if (txtLoginUsername.getForeground().equals(new Color(153, 153, 153)) && (txtLoginUsername.getText().equals("Username"))) {
                throw new Exception("Please enter your username");
            }
            if (Arrays.equals(txtLoginPassword.getPassword(), "Password".toCharArray()) && txtLoginPassword.getForeground().equals(new Color(153, 153, 153))) {
                throw new Exception("Please enter your password");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Missing Information", JOptionPane.OK_OPTION);
        }

        try {
            st = con.createStatement();
            rs = st.executeQuery(sqlLogin);
            while (rs.next()) {
                if (rs.getString("username").equals(txtLoginUsername.getText())) {
                    if (Arrays.equals(rs.getString("password").toCharArray(), txtLoginPassword.getPassword())) {
                        this.setLoggedin(true);
                        
                        this.setAccountType(rs.getString("type"));
                        this.setUsername(rs.getString("username"));
                            
                        break;
                    } 
                }    
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        if (this.isLoggedin()) {
            JOptionPane.showMessageDialog(null, "Welcom to Management Healthcare Service.");
            
            closeJFrame();
        }
        
//         if user name and password does not correct
        if (!(txtLoginUsername.getForeground().equals(new Color(153, 153, 153)) && (txtLoginUsername.getText().equals("Username"))) &&
            !(Arrays.equals(txtLoginPassword.getPassword(), "Password".toCharArray()) && txtLoginPassword.getForeground().equals(new Color(153, 153, 153))) &&
            !this.isLoggedin()) {
            JOptionPane.showMessageDialog(null,"Username and Password does not correct", "Cannot Log in", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnSignupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignupActionPerformed

        boolean b = true;

        if (rdbInsurance.isSelected() == true) {
            accountType = "Insurance Company";
        }
        if (rdbHealthCare.isSelected() == true) {
            accountType = "Healthcare Provider";
        }
        if (rdbNormal.isSelected() == true) {
            accountType = "Normal";
        }
        InitQuery();
        boolean suceeded = false;
        try {
            //First Name
            if (txtFirstName.getForeground().equals(new Color(153, 153, 153)) && (txtFirstName.getText().equals("First Name"))) {
                b = false;
                throw new Exception("Please enter your First Name");
            }
            //Last Name
            if (txtLastName.getForeground().equals(new Color(153, 153, 153)) && (txtLastName.getText().equals("Last Name"))) {
                b = false;
                throw new Exception("Please enter your Last Name");
            }
            //Username
            if (txtUsername.getForeground().equals(new Color(153, 153, 153)) && (txtUsername.getText().equals("Username"))) {
                b = false;
                throw new Exception("Please enter your username");
            }
            //Password
            if (Arrays.equals(txtPassword.getPassword(), "Password".toCharArray()) && txtPassword.getForeground().equals(new Color(153, 153, 153))) {
                b = false;
                throw new Exception("Please enter your password");
            }
            //Confirm Password
            if (Arrays.equals(txtConfirmPassword.getPassword(), "Confirm Password".toCharArray()) && txtConfirmPassword.getForeground().equals(new Color(153, 153, 153))) {
                b = false;
                throw new Exception("Please confirm your password");
            }
            if (!Arrays.equals(txtPassword.getPassword(), txtConfirmPassword.getPassword())) {
                b = false;
                throw new Exception("Password don't match");
            }
            if (bg.getSelection() == null) {
                b = false;
                throw new Exception("Plese select user type");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Missing Information", JOptionPane.OK_OPTION);
        }
        try {
            if (b == true) {
                st = con.createStatement();
                if (st.executeUpdate(sqlSignup) == 1) {
                    suceeded = true;
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Username already exist!", "Cannot register", JOptionPane.WARNING_MESSAGE);
        }
        if (suceeded) {
            JOptionPane.showMessageDialog(null, "Register Successful");
            formComponentShown(null);
        }
    }//GEN-LAST:event_btnSignupActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        setForegroundTextInput(txtFirstName, "First Name");
        setForegroundTextInput(txtLastName, "Last Name");
        setForegroundTextInput(txtLoginUsername, "Username");
        setForegroundTextInput(txtUsername, "Username");
        bg.clearSelection();
        ConfigPasswordField();
        txtPassword.setForeground(new Color(153, 153, 153));
        txtConfirmPassword.setForeground(new Color(153, 153, 153));
        txtLoginPassword.setForeground(new Color(153, 153, 153));
    }//GEN-LAST:event_formComponentShown

    private void setForegroundTextInput(JTextField text, String str) {
        text.setForeground(new Color(153, 153, 153));
        text.setText(str);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            FrmLogin frm = new FrmLogin();
            frm.setVisible(true);
        });
    }

    private void ChangePanelColor() {
        pnlLogin.setBackground(new Color(8, 83, 140));
        pnlSignup.setBackground(new Color(255, 255, 255));
        
        btnSignup.setFocusPainted(false);
        btnLogin.setFocusPainted(false);
        btnExit.setFocusPainted(false);
        //btnSignup.setBorderPainted(false);
    }

    private void SimpleButton() {
        try {
            for (UIManager.LookAndFeelInfo lnf
                    : UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(lnf.getName())) {
                    UIManager.setLookAndFeel(lnf.getClassName());
                    break;
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Helol");
        }

    }

    private void AddEventForAllTextField() {
        txtFirstName.addFocusListener(this);
        txtFirstName.addKeyListener(this);
        txtLastName.addFocusListener(this);
        txtLastName.addKeyListener(this);
        txtUsername.addFocusListener(this);
        txtUsername.addKeyListener(this);
        txtPassword.addFocusListener(this);
        txtPassword.addKeyListener(this);
        txtConfirmPassword.addFocusListener(this);
        txtConfirmPassword.addKeyListener(this);
        txtLoginUsername.addFocusListener(this);
        txtLoginUsername.addKeyListener(this);
        txtLoginPassword.addFocusListener(this);
        txtLoginPassword.addKeyListener(this);

    }

    private void ConfigPasswordField() {
        char p = txtPassword.getEchoChar();
        txtPassword.setEchoChar((char) 0);
        txtPassword.setText("Password");
        txtConfirmPassword.setEchoChar((char) 0);
        txtConfirmPassword.setText("Confirm Password");
        txtLoginPassword.setEchoChar((char) 0);
        txtLoginPassword.setText("Password");
    }

    private void ConfigPasswordPanel() {
        pnlPassword.setBackground(Color.WHITE);
        pnlPassword.setBorder(BorderFactory.createLineBorder(Color.GRAY, 1));
        txtPassword.setBorder(BorderFactory.createEmptyBorder());
    }

    private void InitQuery() {
        sqlLogin = "select * from [User]";
        sqlSignup = "insert into [User] (username, [First Name], [Last Name], [password], [type], joinDate) "
                + "values('" + txtUsername.getText() + "', '" + txtFirstName.getText() + "', '" + txtLastName.getText() + "', '" + txtPassword.getText().toString() + "', '" + accountType + "', '" + date + "')";
    }

    private void configControl() {
        rdbInsurance.setFocusPainted(false);
        rdbHealthCare.setFocusPainted(false);
        rdbNormal.setFocusPainted(false);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnSignup;
    private javax.swing.JCheckBox chkRemember;
    private javax.swing.JCheckBox chkShowPassword;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lbForgetPassword;
    private javax.swing.JPanel panel_main;
    private javax.swing.JPanel pnlLogin;
    private javax.swing.JPanel pnlPassword;
    private javax.swing.JPanel pnlSignup;
    private javax.swing.JRadioButton rdbHealthCare;
    private javax.swing.JRadioButton rdbInsurance;
    private javax.swing.JRadioButton rdbNormal;
    private javax.swing.JPasswordField txtConfirmPassword;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JPasswordField txtLoginPassword;
    private javax.swing.JTextField txtLoginUsername;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    @Override
    public void focusGained(FocusEvent e) {
        TextFieldBehavior.FocusGained(txtFirstName, "First Name");
        TextFieldBehavior.FocusGained(txtLastName, "Last Name");
        TextFieldBehavior.FocusGained(txtUsername, "Username");
        TextFieldBehavior.PasswordFocusGained(txtPassword, "Password");
        TextFieldBehavior.PasswordFocusGained(txtConfirmPassword, "Confirm Password");
        TextFieldBehavior.FocusGained(txtLoginUsername, "Username");
        TextFieldBehavior.PasswordFocusGained(txtLoginPassword, "Password");
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void focusLost(FocusEvent e) {
//        TextFieldBehavior.FocusLost(txtFirstName, "First Name");
//        TextFieldBehavior.FocusLost(txtLastName, "Last Name");
//        TextFieldBehavior.FocusLost(txtUsername, "Username");
//        TextFieldBehavior.PasswordFocusLost(txtPassword, "Password");
//        TextFieldBehavior.PasswordFocusLost(txtConfirmPassword, "Confirm Password");
//        TextFieldBehavior.FocusLost(txtLoginUsername, "Username");
//        TextFieldBehavior.FocusLost(txtLoginPassword, "Password");
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void keyTyped(KeyEvent e) {
        TextFieldBehavior.KeyTyped(txtFirstName, "First Name");
        TextFieldBehavior.KeyTyped(txtLastName, "Last Name");
        TextFieldBehavior.KeyTyped(txtUsername, "Username");
        TextFieldBehavior.PasswordKeyTyped(txtPassword, "Password");
        TextFieldBehavior.PasswordKeyTyped(txtConfirmPassword, "Confirm Password");
        TextFieldBehavior.KeyTyped(txtLoginUsername, "Username");
        TextFieldBehavior.PasswordKeyTyped(txtLoginPassword, "Password");
//throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void keyPressed(KeyEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void keyReleased(KeyEvent e) {
        TextFieldBehavior.KeyReleased(txtFirstName, "First Name");
        TextFieldBehavior.KeyReleased(txtLastName, "Last Name");
        TextFieldBehavior.KeyReleased(txtUsername, "Username");
        TextFieldBehavior.PasswordKeyReleased(txtPassword, "Password");
        TextFieldBehavior.PasswordKeyReleased(txtConfirmPassword, "Confirm Password");
        TextFieldBehavior.KeyReleased(txtLoginUsername, "Username");
        TextFieldBehavior.PasswordKeyReleased(txtLoginPassword, "Password");
//throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

}
